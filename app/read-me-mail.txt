<?php

namespace App\Models;

use Illuminate\Support\Facades\Mail;
use App\Mail\MagicLoginLink;

use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use Laravel\Sanctum\HasApiTokens;
use Illuminate\Support\Str;


class User extends Authenticatable
{
    use HasApiTokens, HasFactory, Notifiable;

    /**
     * The attributes that are mass assignable.
     *
     * @var array<int, string>
     */
    protected $guarded = [
        'id',
        'firm_id',

    ];

    /**
     * The attributes that should be hidden for serialization.
     *
     * @var array<int, string>
     */
    protected $hidden = [
        'password',
        'remember_token',
    ];

    /**
     * The attributes that should be cast.
     *
     * @var array<string, string>
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];


    public function firm()
    {

        return $this->belongsTo(Firm::class);
    }

    public function orders()
    {

        return $this->hasMany(Order::class);
    }

    public function loginTokens()
    {
        return $this->hasMany(LoginToken::class);
    }

    public function sendLoginLink()
    {
        $plaintext = Str::random(32);
        $token = $this->loginTokens()->create([
            'token' => hash('sha256', $plaintext),
            'expires_at' => now()->addMinutes(30),
            'user_email' => $this->email,
        ]);
        // todo send email
        Mail::to($this->email)->queue(new MagicLoginLink($plaintext, $token->expires_at, $token->user_email));
    }
}


MAIL ------------------
<?php

namespace App\Mail;

use Illuminate\Bus\Queueable;
use Illuminate\Mail\Mailable;
use Illuminate\Queue\SerializesModels;
use Illuminate\Support\Facades\URL;

//pour verifier si le mail est bien arrive sur le compte mailtrap voici les infos du compte
//moenah@hotmail.com mdp : Mo&181504

class MagicLoginLink extends Mailable
{
    use Queueable, SerializesModels;

    public $plaintextToken;
    public $expiresAt;
    public $user_email;

    public function __construct($plaintextToken, $expiresAt, $user_email)
    {
        $this->plaintextToken = $plaintextToken;
        $this->expiresAt = $expiresAt;
        $this->user_email = $user_email;
    }

    public function build()
    {
        return $this->subject(config('app.name') . ' Login Verification')
            ->markdown('emails.magic-login-link', [
                'url' => URL::temporarySignedRoute('verify-login', $this->expiresAt, [
                    'token' => $this->plaintextToken, 'user_email' => $this->user_email
                ]),
            ]);
    }
}
